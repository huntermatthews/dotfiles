#! /bin/bash

if [[ $# -ne 1 ]]; then 
    echo "ERROR: you must provide the ip/name of the BMC to connect to"
    exit 1
fi

# Did we get an address, a partial hostname, or a FQDN?
# Remember - this isn't the HOST itself, this the mgmt port for the host
if [[ $1 =~ ^[0-9] ]] ; then
    # it start with a number - better be an ip address. (hostname can CONTAIN numbers, but not start that way)
    address=$1
else
    # better be a hostname - is it fully qualifed?
    if ! [[ $1 =~  \. ]]; then
        hostname=${1}.mgmt.nhgri.nih.gov
    else
        hostname=$1
    fi
    address="$(host $hostname | sed 's/.* //')"
fi


# HACK: This is terrible, but about as good as it gets in shell
# FUTURE: https://api.device42.com/#!/Devices/getDevicesName, returns rack/room/building
# https://api.device42.com/#Rooms_putCustom_fieldsRoom
# curl -k -X GET --header 'Accept: application/json' -u 'matthewsht:*****'  'https://itbinventory01.nhgri.nih.gov/api/1.0/devices/name/itbkvmtdca01/?include_cols=room'
### Tested and works - what do we do about auth?
BASTION=""
case $address in
    (10.7.0.*)              
        BASTION=itbbastiontdca01 
        ;;
    (10.136.0.*|10.136.1.*) 
        BASTION=itbbastiontdc01
        ;;
    (10.136.28.*)           
        BASTION=itbbastionb1201
        ;;
    (10.136.35.*)           
        BASTION=itbbastionbay01  
        ;;
    (*) 
        echo "ERROR: our crude network matching code failed on '$address'"
        exit 1
        ;;
esac

if [[ -z $BASTION ]] ; then
    echo "ERROR: Could not determine a bastion host for '$address'"
    exit 1
fi

# Look for and kill any previous port forwarding...
pkill -x -f '^ssh.*bmcconsole=true$'

# Setup our port forwarding
#ssh -N itbbastiontdc01 -L 1443:itbkvmtdc01.mgmt.nhgri.nih.gov:443 -J itbkvmtdc01 -- working naked command
#echo ssh -N $BASTION -J itbkvmb1201  -L 1443:${address}:443 -L 5900:${address}:5900  bmcconsole=true 
ssh -N $BASTION -J itbkvmb1201 -L 1443:${address}:443 -L 5900:${address}:5900  bmcconsole=true  &


# This is clearly mac specific 
# CAUTION: Do to our "unique" VPN, "localhost" doesn't work reliably. So far 127.0.0.1 does.
# -n works with chrome, but not firefox (on macos) ???? WTFOMGBBQ
if [[ $(uname) = 'Darwin' ]] ; then
    open -W https://127.0.0.1:1443
else
    xdg-open https://127.0.0.1:1443
fi

## END OF LINE ##


