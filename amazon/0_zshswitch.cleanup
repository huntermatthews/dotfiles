# -*- mode: sh -*-
# Taken directly from the code that envImprovement runs
# ^-- way way back - this is highly hacked now. 
#  This crap is unebelievably tricky to get right in all cases.
## With the bug fix that I make login shells stay login shells

# We duplicate the value here to avoid setting any environment variables early.
# Keep non envImp machines from getting a messy environment.

if [[ $SHELL != /apollo/env/envImprovement/var/bin/zsh && -e /apollo/env/envImprovement/var/bin/zsh  ]] ; then
    #echo if not right shell, setting envimp and execing
    export ENV_IMPROVEMENT_ROOT=/apollo/env/envImprovement
    SHELL=$ENV_IMPROVEMENT_ROOT/var/bin/zsh
    exec - $SHELL "$@"
fi

if [[ $SHELL == /apollo/env/envImprovement/var/bin/zsh ]] ; then
    #echo shell is envimp shell, setting mod path and whotnot
    
    # Gets the right, e.g., zle.so to load
    ZSH_VERSION=${${(fz)"$($SHELL -f --version)"}[2]}
    #echo $ZSH_VERSION

    #################### important pre-external-hook vars ################
    # path where zsh searches for modules (such as zle, the zsh line editor)
    # you *want* this to work
    module_path=($ENV_IMPROVEMENT_ROOT/var/lib/zsh/$ZSH_VERSION)
    #echo $module_path
    
    # search path for zsh functions  (fpath ==> function path)
    # Make sure the AmazonZshFunctions list comes second for overriding reasons
    fpath=(
        $ENV_IMPROVEMENT_ROOT/var/zsh/functions/$ZSH_VERSION
        $ENV_IMPROVEMENT_ROOT/var/share/zsh/$ZSH_VERSION/functions
    )
    #echo $fpath
fi
